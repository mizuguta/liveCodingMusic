import qualified Sound.Tidal.Tempo as T

resetCyclesTo n = T.changeTempo (sTempoMV tidal) (\t tempo -> tempo {T.atTime = t, T.atCycle = n})

setcps (120/60/4)

do
 resetCyclesTo (-0.05)
 let
   cy1pat = "0 ~ ~ ~ ~ ~ ~ ~ [1 1] 0 0 ~"
   cy2pat = "0 ~ 0?? ~ 0? 0? 0 ~ [1 1] 0 0 ~"
   bass = "cs3 cs3 d3 d3 e3 e3 fs3 b1"
 d1 -- main chord
   $ seqP[
   (0, 4, (
     slow 2 $ s "MyMoog*6 MyMoog*6"
     # n "[<af4,e5>] [<a4,e5>]"
     )),
   (4, 64, (
     slow 1 $ s "MyMoog*3 MyMoog*3"
     # n "[<af4,e5>] [<a4,e5>]"
     ))
   ]
   # sustain 1.0
   # sustainpedal 0.125
   # pitch1 (range 1.8 2.0 (rand))
   # shape 0.1
   # hpf 60 # hpq 0.2
   # room 0.6
   # gain 1.0
   # pan (range 0.4 0.6 rand)
 d2 -- hi-hat snare
   $ seqP[
   (4, 6, (
     s (fit 0 ["hh27:7", "808:4"] cy1pat)
     # cut 1 # gain "1.3 ~ 1.3 ~ 1.3 1.3 1.3 ~ [1 1] 1.3 1.3 ~"
     )),
   (6, 64, (
     s (fit 0 ["hh27:7", "808:4"] cy2pat)
     # cut 1 # gain "1.3 ~ 1.3 ~ 1.3 1.3 1.3 ~ [1 1] 1.3 1.3 ~"
     )),
   (7, 64, (
     s "~ ~ ~ [~ ~ superhammondBend/4]"
     # voice 1 # n "c4" # sustain 0.2 # sustainpedal 0.4 # slide 2 # hpf 60 # hpq 0.3 # gain 1.0
     )),
   (12, 64, (
     fast 4 $ s "[808oh ~ 808oh/2] 808sd:11" # gain "1 1.1" # hpf 60 # hpq 0.2
     ))
   ]
 d3 -- bass drum1
   $ seqP[
   (7, 16, (
     fast 4
     $ every' 3 1 (const (s "~ bd:19"))
     $ every' 3 0 (const (s "bd:19 ~"))
     $ s "~"
     # hpf 1000
     # gain 1.13
     )),
   (16, 64, (
     fast 4 $ s "bd:19 ~" # speed "<1 0.8> 1" # hpf 60 # hpq 0.2 # gain 1.13
     ))
   ]
 d4 -- symbal
   $ seqP[
   (16, 64, (
     stut' 2 (1/4) ((|* gain 0.9).(|> pan (1)))
     $ stut' 6 (1/2) ((|* gain 0.9).(|> pan (0)))
     $ s "808cy:2/8"
     # pan "0"
     # gain 1.1
     ))
   ]
 d5 -- click
   $ seqP[
   (16, 64, (
     fast 4
     $ every' 3 0 (const (
       s "SinOscSynthBend ~" # n "<af4,af5,af6>" # hpf 700 # lpf 800 # sustain 0.05 # pan 0.3))
     $ every' 3 1 (const (
       s "~ SinOscSynthBend" # n "<af4,af5,af6>" # hpf 700 # lpf 800 # sustain 0.05 # pan 0.7))
     $ s "~"
     # gain 0.9
     # pan rand
     ))
   ]
 d6 --bass
   $ (|* gain 1.1)
   $ seqP[
   (18, 20, (
     slow 2
     $ n bass
     # s "superhammondBend"
     # gain "0 0 0 0 1 1 1 1"
     )),
   (20, 64, (
     slow 2
     $ n bass
     # s "superhammondBend"
     # gain "1 0 1 0 1 1 1 1"
     ))
   ]
   # sustain 0.5
   # sustain "0.46 0 0.46 0 0.46 0.46 0.46 0.46"
   # voice 1
 d7
   $ seqP[
   (24, 64, (
     (|* gain 1.1)
     $ stut' 2 (1/4) ((|* gain 0.9).(|* lpf 0.8).(|> pan (0)).(|> slide 0))
     $ stut' 6 (1/2) ((|* gain 0.9).(|* lpf 0.8).(|> pan (1)).(|> slide 0))
     $ every' 4 0 ((|> n "~ [[fs6 af6 e6] b5] ~ ~").(|> gain 1).(|> pan (0.3)))
     $ s "~ [superhammondBend*3 superhammondBend] ~ ~"
     # sustain 0.1
     # room 0.1
     # gain 0
     # lpf 1000
     # voice 0
     # pan (slow 3 $ sine)
     ))
   ]